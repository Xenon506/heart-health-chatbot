<div class="chat-container">
    <div class="chat-box" id="chat-box"></div>
    <div class="chat-input">
        <input type="text" id="user-input" placeholder="Ask about heart health...">
        <button onclick="sendMessage()">Send</button>
    </div>
</div>
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    text-align: center;
}

.chat-container {
    width: 350px;
    margin: 50px auto;
    background: white;
    border-radius: 10px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    overflow: hidden;
}

.chat-box {
    height: 400px;
    overflow-y: auto;
    padding: 10px;
}

.chat-input {
    display: flex;
    padding: 10px;
    border-top: 1px solid #ddd;
}

.chat-input input {
    flex: 1;
    padding: 10px;
    border: none;
    border-radius: 5px;
}

.chat-input button {
    padding: 10px;
    border: none;
    background: #ff4d4d;
    color: white;
    border-radius: 5px;
    margin-left: 5px;
    cursor: pointer;
}

.chat-message {
    padding: 8px 12px;
    margin: 8px 0;
    border-radius: 5px;
    max-width: 80%;
}

.user-message {
    background: #007bff;
    color: white;
    text-align: right;
    margin-left: auto;
}

.bot-message {
    background: #f1f1f1;
    text-align: left;
    margin-right: auto;
}
const chatBox = document.getElementById("chat-box");
const API_KEY = "AIzaSyAQyqcOHFbR5QidrkrhSTWMgaRnLOqa2kE"; // Replace with your Gemini API key

async function sendMessage() {
    let userInput = document.getElementById("user-input").value;
    if (!userInput.trim()) return;

    appendMessage("You", userInput, "user-message");
    document.getElementById("user-input").value = "";

    setTimeout(async () => {
        let botResponse = await getBotResponse(userInput);
        appendMessage("HeartBot", botResponse, "bot-message");
    }, 1000);
}

function appendMessage(sender, text, className) {
    let messageDiv = document.createElement("div");
    messageDiv.classList.add("chat-message", className);
    messageDiv.innerHTML = `<strong>${sender}:</strong> ${text}`;
    chatBox.appendChild(messageDiv);
    chatBox.scrollTop = chatBox.scrollHeight;
}

async function getBotResponse(input) {
    const url = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;

    const predefinedPrompt = `
    You are an AI medical assistant specializing in heart health. 
    - Provide **medications and medical tests** based on the patient's symptoms. 
    - **Do NOT** suggest visiting a doctor unless the condition is severe. 
    - If symptoms indicate a severe emergency (e.g., heart attack, stroke), **then** suggest calling emergency services.
    - Always provide **clear steps** the patient can follow.
    `;

    const finalInput = predefinedPrompt + "\n\nUser's Question: " + input;

    const requestData = {
        contents: [{ parts: [{ text: finalInput }] }]
    };

    try {
        let response = await fetch(url, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(requestData),
        });

        let data = await response.json();
        
        if (data.candidates && data.candidates.length > 0) {
            return data.candidates[0].content.parts[0].text;
        } else {
            return "I'm sorry, I couldn't fetch a response.";
        }
    } catch (error) {
        console.error("API Error:", error);
        return "Error connecting to AI service. Please check your API key or network connection.";
    }
}
